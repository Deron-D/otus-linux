# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']
ENV["LC_ALL"] = "en_US.UTF-8"

MACHINES = {
  :master => {
        :hostname => "master.otus.lab",
        :box_name => "centos/7",
        :ip_addr => '192.168.11.150',
        # VM CPU count
        :cpus => 2,
        # VM RAM size (Mb)
        :memory => 1024 
  },
  :slave => {
        :hostname => "slave.otus.lab",
        :box_name => "centos/7",
        :ip_addr => '192.168.11.151',
        # VM CPU count
        :cpus => 2,
        # VM RAM size (Mb)
        :memory => 1024 
},
  :backup => {
        :hostname => "backup.otus.lab",
          :box_name => "centos/7",
        :ip_addr => '192.168.11.152',
        # VM CPU count
        :cpus => 2,
        # VM RAM size (Mb)
        :memory => 1024 
 },
   :monlog => {
        :hostname => "monlog.otus.lab",
        :box_name => "centos/7",
        :ip_addr => '192.168.11.153',
        # VM CPU count
        :cpus => 2,
        # VM RAM size (Mb)
        :memory => 1024 
 },
   :zabbixsrv => {
        :hostname => "zabbixsrv.otus.lab",
        :box_name => "centos/7",
        :ip_addr => '192.168.11.154',
        # VM CPU count
        :cpus => 2,
        # VM RAM size (Mb)
        :memory => 1024 
 },

}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|
    # Disable synced folder
    config.vm.synced_folder ".", "/vagrant", disabled: true

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxconfig[:hostname]

        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.network "private_network", ip: boxconfig[:ip_addr]

        case boxname.to_s
           when "monlog"
             box.vm.network "forwarded_port", guest: 9090, host: 9090
             box.vm.network "forwarded_port", guest: 3000, host: 3000
       end
           
       box.vm.provider "virtualbox" do |v|
          # Set VM RAM size and CPU count
          v.memory = boxconfig[:memory]
          v.cpus = boxconfig[:cpus]
        end

        box.vm.provision "shell", inline: <<-SHELL
        	timedatectl set-timezone Europe/Moscow
		      mkdir -p ~root/.ssh
          cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
#        case boxname.to_s
#          when "backup"
#            box.vm.provision "ansible" do |ansible|
#           ansible.verbose = "vv"
#            ansible.playbook = "provision/playbook.yml"
#            ansible.become = "true"
#            ansible.limit = "all"
#          end
#        end

      end
  end
end

