# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']
ENV["LC_ALL"] = "en_US.UTF-8"

MACHINES = {
  :backupserver => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.101',
        :ram => 1024,
        :cpu => 2,
        :disks => {
                :sata1 => {
                        :dfile => './disks/sata1.vdi',
                        :size => 250,
                        :port => 1
                }
           }
        },
  :client => {
        :box_name => "centos/7",
        :ip_addr => '192.168.11.102',
        :ram => 1024,
        :cpu => 2
        }
    }

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          box.vm.network "private_network", ip: boxconfig[:ip_addr]
         
#          box.vm.network "forwarded_port", guest: 9090, host: 9090
#          box.vm.network "forwarded_port", guest: 3000, host: 3000
              
          box.vm.provider :virtualbox do |vb|
            vb.customize ["modifyvm", :id, "--memory", boxconfig[:ram]]
            vb.customize ["modifyvm", :id, "--cpus", boxconfig[:cpu]] 
          end
          
          box.vm.provision "shell", inline: <<-SHELL
            mkdir -p ~root/.ssh
            cp ~vagrant/.ssh/auth* ~root/.ssh
          SHELL

#          case boxname.to_s
#            when "client"
#               box.vm.provision "ansible" do |ansible|
#                ansible.verbose = "vv"
#                 ansible.playbook = "provision/playbook.yml"
#                 ansible.become = "true"
#                 ansible.limit = "all"
#              end
#         end

      end
  end
end
